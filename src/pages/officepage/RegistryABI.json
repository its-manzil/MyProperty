[
{
    "inputs": [
      {
        "internalType": "uint256",
        "name": "landId",
        "type": "uint256"
      }
    ],
    "name": "getLandDetails",
    "outputs": [
      {
        "components": [
          {
            "internalType": "uint256",
            "name": "landId",
            "type": "uint256"
          },
          {
            "internalType": "uint256",
            "name": "landNumber",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "landmark",
            "type": "string"
          },
          {
            "internalType": "uint256",
            "name": "area",
            "type": "uint256"
          },
          {
            "internalType": "string",
            "name": "landType",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "ownerName",
            "type": "string"
          },
          {
            "internalType": "string",
            "name": "citizenshipNo",
            "type": "string"
          },
          {
            "internalType": "address",
            "name": "currentOwner",
            "type": "address"
          },
          {
            "internalType": "bool",
            "name": "isVerified",
            "type": "bool"
          },
          {
            "internalType": "bool",
            "name": "isTransferred",
            "type": "bool"
          }
        ],
        "internalType": "struct Registry.Land",
        "name": "",
        "type": "tuple"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "name": "lands",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "landId",
        "type": "uint256"
      },
      {
        "internalType": "uint256",
        "name": "landNumber",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "landmark",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "area",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "landType",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "ownerName",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "citizenshipNo",
        "type": "string"
      },
      {
        "internalType": "address",
        "name": "currentOwner",
        "type": "address"
      },
      {
        "internalType": "bool",
        "name": "isVerified",
        "type": "bool"
      },
      {
        "internalType": "bool",
        "name": "isTransferred",
        "type": "bool"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "nextLandId",
    "outputs": [
      {
        "internalType": "uint256",
        "name": "",
        "type": "uint256"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [],
    "name": "officer",
    "outputs": [
      {
        "internalType": "address",
        "name": "",
        "type": "address"
      }
    ],
    "stateMutability": "view",
    "type": "function"
  },
  {
    "inputs": [
      {
        "internalType": "uint256",
        "name": "_landNumber",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_landmark",
        "type": "string"
      },
      {
        "internalType": "uint256",
        "name": "_area",
        "type": "uint256"
      },
      {
        "internalType": "string",
        "name": "_landType",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_ownerName",
        "type": "string"
      },
      {
        "internalType": "string",
        "name": "_citizenshipNo",
        "type": "string"
      }
    ],
    "name": "registerLand",
    "outputs": [],
    "stateMutability": "nonpayable",
    "type": "function"
}
]
